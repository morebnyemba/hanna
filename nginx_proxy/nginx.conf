http {
    # Define upstream servers for backend and frontend services
    upstream backend_server {
    events {
        worker_connections 1024;
    }

        # Django app (Gunicorn) running in the 'backend' container on its internal port 8000
        server backend:8000;
    }

    upstream frontend_server {
        # React app (served by Nginx) running in the 'frontend' container on its internal port 80
        server frontend:80;
    }


    # --- HTTP Server Block: Redirect all HTTP traffic to HTTPS ---
    server {
        listen 80;
        listen [::]:80; # For IPv6

    # Listen on your new domains and IPs for HTTP requests
    server_name dashboard.hanna.co.zw backend.hanna.co.zw;

    # Location for Let's Encrypt ACME challenge files
    location /.well-known/acme-challenge/ {
        root /var/www/letsencrypt/;
    }
    
    # Redirect all other HTTP requests to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
    }

# --- HTTPS Server Block for Frontend ---
    server {
    listen 443 ssl;
    listen [::]:443 ssl; # For IPv6

    server_name dashboard.hanna.co.zw;

    # IMPORTANT: Update with the correct SSL certificate path for your frontend domain
    ssl_certificate /etc/letsencrypt/live/dashboard.hanna.co.zw/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/dashboard.hanna.co.zw/privkey.pem;

    # Recommended SSL settings
    include /etc/nginx/ssl_custom/options-ssl-nginx.conf;
    ssl_dhparam /etc/nginx/ssl_custom/ssl-dhparams.pem;

    # Add security headers for enhanced protection
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: blob:; font-src 'self'; object-src 'none'; frame-ancestors 'none'; connect-src 'self' https://backend.hanna.co.zw wss://backend.hanna.co.zw https://crmbackend.lifeinternationalministries.com wss://crmbackend.lifeinternationalministries.com;" always;

    # Proxy all requests to the React frontend container
    location / {
        proxy_pass http://frontend_server;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        # The Nginx instance inside your 'frontend' container should be configured
        # with 'try_files $uri $uri/ /index.html;' to handle SPA routing.
    }

    # Optional: Gzip compression for text-based assets served by the frontend
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css application/json application/javascript text/xml;
    }    

# --- HTTPS Server Block for Backend ---
    server {
    listen 443 ssl;
    listen [::]:443 ssl; # For IPv6
 
    server_name backend.hanna.co.zw;

    # Use the same certificate as the primary domain.
        ssl_certificate /etc/letsencrypt/live/dashboard.hanna.co.zw/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/dashboard.hanna.co.zw/privkey.pem;

    # Recommended SSL settings
    include /etc/nginx/ssl_custom/options-ssl-nginx.conf;
    ssl_dhparam /etc/nginx/ssl_custom/ssl-dhparams.pem;

    # Add security headers for enhanced protection
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Set a higher client body size for potential file uploads
    client_max_body_size 20M;

    # Serve Django static files directly for better performance
    location /static/ {
        alias /srv/www/static/;
        expires 14d; # Cache static files aggressively
        add_header Cache-Control "public";
    }

    # Serve Django media files directly for better performance
    location /media/ {
        alias /srv/www/media/;
        expires 7d; # Cache user-uploaded media
        add_header Cache-Control "public";
    }

    # Location for WebSocket connections (e.g., /ws/...)
    location /ws/ {
        proxy_pass http://backend_server;
            proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

    # Proxy all other requests (including /api/, /admin/, etc.) to the Django backend
    location / {
        proxy_pass http://backend_server;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_buffering off;
}
}
}