user  nginx;
worker_processes  auto;
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

stream {
    resolver 127.0.0.11 valid=10s; # Docker internal DNS

    # --- MAP FOR SSL PASSTHROUGH FOR MAIL PROTOCOLS ---
    map $ssl_preread_server_name $backend_mail {
        mail.hanna.co.zw   front:8443;  # Mailu HTTPS internal
        default            127.0.0.1:10443;
    }

    # Mail protocol ports (SSL passthrough)
    server {
        listen 443;
        listen [::]:443;
        proxy_pass $backend_mail;
        ssl_preread on;
    }

    upstream mailu_imaps       { server front:993; }
    upstream mailu_pop3s       { server front:995; }
    upstream mailu_smtps       { server front:465; }
    upstream mailu_submission  { server front:587; }
    upstream mailu_smtp        { server front:25; }
    upstream mailu_sieve       { server front:4190; }
    upstream mailu_imap_legacy { server front:143; }

    server { listen 993; listen [::]:993; proxy_pass mailu_imaps; }
    server { listen 995; listen [::]:995; proxy_pass mailu_pop3s; }
    server { listen 465; listen [::]:465; proxy_pass mailu_smtps; }
    server { listen 587; listen [::]:587; proxy_pass mailu_submission; }
    server { listen 25;  listen [::]:25;  proxy_pass mailu_smtp; }
    server { listen 4190; listen [::]:4190; proxy_pass mailu_sieve; }
    server { listen 143; listen [::]:143; proxy_pass mailu_imap_legacy; }
}

http {
    resolver 127.0.0.11 valid=10s;
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # --- MAILU WEB INTERFACES ---
    server {
        listen 80;
        listen [::]:80;
        server_name mail.hanna.co.zw;
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name mail.hanna.co.zw;

        ssl_certificate     /certs/live/mail.hanna.co.zw/fullchain.pem;
        ssl_certificate_key /certs/live/mail.hanna.co.zw/privkey.pem;


        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        location ~* ^/(admin|api|sso|static|webdav|webmail|(apple\.)?mobileconfig|(\.well\-known/autoconfig/)?mail/|Autodiscover/Autodiscover) {
            proxy_pass https://front:8443; # internal Docker DNS
            proxy_redirect https://front https://mail.hanna.co.zw;
        }

        location / {
            return 301 https://mail.hanna.co.zw/webmail;
        }
    }

    # --- DJANGO + REACT STACK ---
    server {
        listen 80;
        listen [::]:80;
        server_name dashboard.hanna.co.zw;
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name dashboard.hanna.co.zw;

        ssl_certificate /etc/nginx/ssl/live/dashboard.hanna.co.zw/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/live/dashboard.hanna.co.zw/privkey.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;

        # React frontend
        location / {
            proxy_pass http://frontend:3000;  # React dev server or built files via container
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Django backend
        location /api/ {
            proxy_pass http://backend:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Static and media files
        location /static/ {
            alias /srv/www/static/;
        }

        location /media/ {
            alias /srv/www/media/;
        }
    }

    include /etc/nginx/conf.d/*.conf;
}
