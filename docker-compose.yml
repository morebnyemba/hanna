services:
  db:
    image: postgres:15-alpine
    container_name: whatsappcrm_db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    restart: unless-stopped # Ensure that the DB restarts unless explicitly stopped

  redis:
    image: redis:7-alpine
    container_name: whatsappcrm_redis
    command: redis-server /usr/local/etc/redis/redis.conf # Use config file for redis
    # redis-server --requirepass your_strong_password
    volumes:
      - redis_data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    ports: # Ensure the ports are accessible to the host if needed
      - "6379:6379"
    restart: unless-stopped # Ensure redis restarts unless explicitly stopped


  # --- Mailu Mail Server Services (2.x) ---
  mailu_front:
    image: mailu/nginx:1.9
    restart: always
    env_file: .env.mailu
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./mailu/certs:/certs
      - ./mailu/overrides:/overrides
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - mailu_admin
      - mailu_imap
      - mailu_smtp

  mailu_admin:
    image: mailu/admin:1.9
    restart: always
    env_file: .env.mailu
    volumes:
      - ./mailu/data:/data

  mailu_imap:
    image: mailu/dovecot:1.9
    restart: always
    env_file: .env.mailu
    volumes:
      - ./mailu/mail:/mail
      - ./mailu/overrides:/overrides

  mailu_smtp:
    image: mailu/postfix:1.9
    restart: always
    env_file: .env.mailu
    services:

      # Shared Redis for both Mailu and App
      redis:
        image: redis:alpine
        restart: always
        volumes:
          - /mailu/redis:/data
          - ./redis.conf:/usr/local/etc/redis/redis.conf
        ports:
          - "6379:6379"

      # Mailu stack (2024.06)
      front:
        image: ghcr.io/mailu/nginx:2024.06
        restart: always
        env_file: mailu.env
        ports:
          - "80:80"
          - "443:443"
          - "25:25"
          - "465:465"
          - "587:587"
          - "110:110"
          - "995:995"
          - "143:143"
          - "993:993"
          - "4190:4190"
        networks:
          - default
          - webmail
          - radicale
        volumes:
          - /mailu/certs:/certs
          - /mailu/overrides/nginx:/overrides:ro
        depends_on:
          - resolver

      resolver:
        image: ghcr.io/mailu/unbound:2024.06
        env_file: mailu.env
        restart: always
        networks:
          default:
            ipv4_address: 192.168.203.254

      admin:
        image: ghcr.io/mailu/admin:2024.06
        restart: always
        env_file: mailu.env
        volumes:
          - /mailu/data:/data
          - /mailu/dkim:/dkim
        depends_on:
          - redis
          - resolver

      imap:
        image: ghcr.io/mailu/dovecot:2024.06
        restart: always
        env_file: mailu.env
        volumes:
          - /mailu/mail:/mail
          - /mailu/overrides/dovecot:/overrides:ro
        networks:
          - default
          - fts_attachments
        depends_on:
          - front
          - fts_attachments
          - resolver

      smtp:
        image: ghcr.io/mailu/postfix:2024.06
        restart: always
        env_file: mailu.env
        volumes:
          - /mailu/mailqueue:/queue
          - /mailu/overrides/postfix:/overrides:ro
        depends_on:
          - front
          - resolver

      oletools:
        image: ghcr.io/mailu/oletools:2024.06
        hostname: oletools
        restart: always
        networks:
          - oletools
        depends_on:
          - resolver

      fts_attachments:
        image: apache/tika:latest-full
        hostname: tika
        restart: always
        networks:
          - fts_attachments
        depends_on:
          - resolver

      antispam:
        image: ghcr.io/mailu/rspamd:2024.06
        hostname: antispam
        restart: always
        env_file: mailu.env
        networks:
          - default
          - oletools
          - clamav
        volumes:
          - /mailu/filter:/var/lib/rspamd
          - /mailu/overrides/rspamd:/overrides:ro
        depends_on:
          - front
          - redis
          - oletools
          - antivirus
          - resolver

      antivirus:
        image: clamav/clamav-debian:1.4
        restart: always
        networks:
          - clamav
        volumes:
          - /mailu/clamav:/var/lib/clamav

      webdav:
        image: ghcr.io/mailu/radicale:2024.06
        restart: always
        volumes:
          - /mailu/dav:/data
        networks:
          - radicale

      fetchmail:
        image: ghcr.io/mailu/fetchmail:2024.06
        restart: always
        env_file: mailu.env
        volumes:
          - /mailu/data/fetchmail:/data
        depends_on:
          - admin
          - smtp
          - imap
          - resolver

              volumes:
                - /mailu/mailqueue:/queue
                - /mailu/overrides/postfix:/overrides:ro
        env_file: mailu.env
        volumes:
          - /mailu/webmail:/data
          - /mailu/overrides/roundcube:/overrides:ro
        networks:
          - webmail
        depends_on:
          - front

      # App stack
      db:
        image: postgres:15-alpine
        container_name: whatsappcrm_db
        volumes:
          - postgres_data:/var/lib/postgresql/data/
        environment:
          POSTGRES_DB: ${DB_NAME}
          POSTGRES_USER: ${DB_USER}
          POSTGRES_PASSWORD: ${DB_PASSWORD}
        ports:
          - "5432:5432"
        restart: unless-stopped

      backend:
        build: ./whatsappcrm_backend
        container_name: whatsappcrm_backend_app
        volumes:
          - ./whatsappcrm_backend:/app
          - staticfiles_volume:/app/staticfiles
        env_file:
          - ./whatsappcrm_backend/.env.prod
        depends_on:
          - db
          - redis
        restart: unless-stopped

      frontend:
        build: ./whatsapp-crm-frontend
        container_name: whatsappcrm_frontend_app
        depends_on:
          - backend
        restart: unless-stopped

      celery_io_worker:
        build: ./whatsappcrm_backend
        container_name: whatsappcrm_celery_io_worker
        command: celery -A whatsappcrm_backend worker -Q celery -l INFO --concurrency=4
        volumes:
          - ./whatsappcrm_backend:/app
        env_file:
          - ./whatsappcrm_backend/.env.prod
        depends_on:
          - redis
          - db
        restart: unless-stopped

      celery_cpu_worker:
        build: ./whatsappcrm_backend
        container_name: whatsappcrm_celery_cpu_worker
        command: celery -A whatsappcrm_backend worker -Q cpu_heavy -l INFO --concurrency=1
        volumes:
          - ./whatsappcrm_backend:/app
        env_file:
          - ./whatsappcrm_backend/.env.prod
        depends_on:
          - redis
          - db
        restart: unless-stopped

      celery_beat:
        build: ./whatsappcrm_backend
        container_name: whatsappcrm_celery_beat
        command: celery -A whatsappcrm_backend beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler
        volumes:
          - ./whatsappcrm_backend:/app
        env_file:
          - ./whatsappcrm_backend/.env.prod
        depends_on:
          - redis
          - db
        restart: unless-stopped

      nginx_proxy:
        image: nginx:1.25-alpine
        container_name: whatsappcrm_nginx_proxy
        ports:
          - "8080:80"
          - "8443:443"
        volumes:
          - ./nginx_proxy/nginx.conf:/etc/nginx/conf.d/default.conf:ro
          - ./nginx_proxy/ssl:/etc/nginx/ssl_custom:ro
          - staticfiles_volume:/srv/www/static/:ro
          - ./whatsappcrm_backend/mediafiles:/srv/www/media/:ro
          - /var/www/letsencrypt:/var/www/letsencrypt:ro
          - /etc/letsencrypt:/etc/nginx/ssl:ro
        depends_on:
          - backend
          - frontend
        restart: unless-stopped

    volumes:
      postgres_data:
      staticfiles_volume:
